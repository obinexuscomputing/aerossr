{"version":3,"file":"StaticFileMiddleware.js","sources":["../../../../../src/middlewares/StaticFileMiddleware.ts"],"sourcesContent":["import { stat, createReadStream, promises as fsPromises, Stats } from 'fs';\r\nimport * as path from 'path';\r\nimport { promisify } from 'util';\r\nimport { gzip } from 'zlib';\r\nimport { IncomingMessage, ServerResponse } from 'http';\r\nimport { generateETag } from '../utils';\r\n// Removed duplicate import of Stats\r\nimport { StaticFileOptions, Middleware } from '../types';\r\n\r\nconst gzipAsync = promisify(gzip);\r\n\r\nexport class StaticFileMiddleware {\r\n  public readonly root: string;\r\n  public readonly maxAge: number;\r\n  public readonly index: string[];\r\n  public readonly dotFiles: 'ignore' | 'allow' | 'deny';\r\n  public readonly compression: boolean;\r\n  public readonly etag: boolean;\r\n  options: any;\r\n\r\n  constructor(options: StaticFileOptions) {\r\n    this.root = options.root;\r\n    this.maxAge = options.maxAge || 86400;\r\n    this.index = options.index || ['index.html'];\r\n    this.dotFiles = options.dotFiles || 'ignore';\r\n    this.compression = options.compression !== false;\r\n    this.etag = options.etag !== false;\r\n  }\r\n\r\n  private async serveFile(\r\n    filepath: string,\r\n    stats: Stats,\r\n    req: IncomingMessage,\r\n    res: ServerResponse\r\n  ): Promise<void> {\r\n    const mimeType = this.getMimeType(path.extname(filepath).toLowerCase());\r\n\r\n    const etag = this.etag ? generateETag(`${filepath}:${stats.mtime.toISOString()}`) : null;\r\n    if (etag && req.headers['if-none-match'] === etag) {\r\n      res.writeHead(304);\r\n      res.end();\r\n      return;\r\n    }\r\n\r\n    const headers: Record<string, string> = {\r\n      'Content-Type': mimeType,\r\n      'Cache-Control': `public, max-age=${this.maxAge}`,\r\n      'Last-Modified': stats.mtime.toUTCString(),\r\n    };\r\n\r\n    if (etag) {\r\n      headers['ETag'] = etag;\r\n    }\r\n\r\n    const content = await fsPromises.readFile(filepath);\r\n\r\n    if (this.compression && this.isCompressible(mimeType) && content.length > 1024) {\r\n      const acceptEncoding = req.headers['accept-encoding'] || '';\r\n      if (acceptEncoding.includes('gzip')) {\r\n        const compressed = await gzipAsync(content);\r\n        headers['Content-Encoding'] = 'gzip';\r\n        headers['Vary'] = 'Accept-Encoding';\r\n        res.writeHead(200, headers);\r\n        res.end(compressed);\r\n        return;\r\n      }\r\n    }\r\n\r\n    res.writeHead(200, headers);\r\n    res.end(content);\r\n  }\r\n\r\n  private isDotFile(urlPath: string): boolean {\r\n    return urlPath.split('/').some(part => part.startsWith('.'));\r\n  }\r\n\r\n  private handleDotFile(req: IncomingMessage, res: ServerResponse, next: () => Promise<void>): Promise<void> | false {\r\n    if (this.dotFiles === 'allow') {\r\n      return false; // Continue processing\r\n    }\r\n\r\n    if (this.dotFiles === 'deny') {\r\n      res.writeHead(403, { 'Content-Type': 'text/plain' });\r\n      res.end('Forbidden');\r\n      return Promise.resolve();\r\n    }\r\n\r\n    // ignore - pass to next middleware\r\n    return next();\r\n  }\r\n\r\n  private isCompressible(mimeType: string): boolean {\r\n    return /^(text|application)\\/(javascript|json|html|xml|css|plain)/.test(mimeType);\r\n  }\r\n\r\n  private getMimeType(filePath: string): string {\r\n    const ext = path.extname(filePath).toLowerCase();\r\n    switch (ext) {\r\n      case '.html':\r\n        return 'text/html';\r\n      case '.js':\r\n        return 'application/javascript';\r\n      case '.css':\r\n        return 'text/css';\r\n      case '.png':\r\n        return 'image/png';\r\n      case '.jpg':\r\n      case '.jpeg':\r\n        return 'image/jpeg';\r\n      case '.svg':\r\n        return 'image/svg+xml';\r\n      case '.json':\r\n        return 'application/json';\r\n      default:\r\n        return 'application/octet-stream';\r\n    }\r\n  }\r\n  private async statFile(filePath: string): Promise<Stats | null> {\r\n    try {\r\n      return await fsPromises.stat(filePath);\r\n    } catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  middleware() {\r\n    return async (req: IncomingMessage, res: ServerResponse, next: () => void) => {\r\n      try {\r\n        const requestedPath = path.join(this.options.root, decodeURIComponent(req.url || '/'));\r\n        let resolvedPath = path.resolve(requestedPath);\r\n\r\n        if (!resolvedPath.startsWith(this.options.root)) {\r\n          res.writeHead(403);\r\n          res.end('Forbidden');\r\n          return;\r\n        }\r\n\r\n        if (!this.options.allowDotfiles && path.basename(resolvedPath).startsWith('.')) {\r\n          res.writeHead(403);\r\n          res.end('Forbidden');\r\n          return;\r\n        }\r\n\r\n        let stat = await this.statFile(resolvedPath);\r\n\r\n        if (!stat) {\r\n          const indexFile = path.join(resolvedPath, this.options.defaultFile || 'index.html');\r\n          stat = await this.statFile(indexFile);\r\n          if (stat) {\r\n            resolvedPath = indexFile;\r\n          } else {\r\n            next();\r\n            return;\r\n          }\r\n        }\r\n\r\n        if (stat.isDirectory()) {\r\n          next();\r\n          return;\r\n        }\r\n\r\n        res.writeHead(200, {\r\n          'Content-Type': this.getMimeType(resolvedPath),\r\n          'Cache-Control': this.options.cacheControl,\r\n          'Last-Modified': stat.mtime.toUTCString(),\r\n        });\r\n\r\n        const stream = createReadStream(resolvedPath);\r\n        stream.pipe(res);\r\n\r\n      } catch (error) {\r\n        console.error('StaticFileMiddleware error:', error);\r\n        res.writeHead(500);\r\n        res.end('Internal Server Error');\r\n      }\r\n    };\r\n  }\r\n}"],"names":["fsPromises"],"mappings":"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"}