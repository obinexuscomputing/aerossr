{"version":3,"file":"StaticFileMiddleware.js","sources":["../../../../src/middlewares/StaticFileMiddleware.ts"],"sourcesContent":["import { stat, readFile } from 'fs/promises';\r\nimport * as path from 'path';\r\nimport { promisify } from 'util';\r\nimport { gzip } from 'zlib';\r\nimport { IncomingMessage, ServerResponse } from 'http';\r\nimport { generateETag } from '../utils';\r\nimport { Stats } from 'fs';\r\nimport { StaticFileOptions, Middleware } from '../types';\r\n\r\nconst gzipAsync = promisify(gzip);\r\n\r\nexport class StaticFileMiddleware {\r\n  public readonly root: string;\r\n  public readonly maxAge: number;\r\n  public readonly index: string[];\r\n  public readonly dotFiles: 'ignore' | 'allow' | 'deny';\r\n  public readonly compression: boolean;\r\n  public readonly etag: boolean;\r\n\r\n  constructor(options: StaticFileOptions) {\r\n    this.root = options.root;\r\n    this.maxAge = options.maxAge || 86400;\r\n    this.index = options.index || ['index.html'];\r\n    this.dotFiles = options.dotFiles || 'ignore';\r\n    this.compression = options.compression !== false;\r\n    this.etag = options.etag !== false;\r\n  }\r\n\r\n  private async serveFile(\r\n    filepath: string,\r\n    stats: Stats,\r\n    req: IncomingMessage,\r\n    res: ServerResponse\r\n  ): Promise<void> {\r\n    const mimeType = this.getMimeType(path.extname(filepath).toLowerCase());\r\n\r\n    const etag = this.etag ? generateETag(`${filepath}:${stats.mtime.toISOString()}`) : null;\r\n    if (etag && req.headers['if-none-match'] === etag) {\r\n      res.writeHead(304);\r\n      res.end();\r\n      return;\r\n    }\r\n\r\n    const headers: Record<string, string> = {\r\n      'Content-Type': mimeType,\r\n      'Cache-Control': `public, max-age=${this.maxAge}`,\r\n      'Last-Modified': stats.mtime.toUTCString(),\r\n    };\r\n\r\n    if (etag) {\r\n      headers['ETag'] = etag;\r\n    }\r\n\r\n    const content = await readFile(filepath);\r\n\r\n    if (this.compression && this.isCompressible(mimeType) && content.length > 1024) {\r\n      const acceptEncoding = req.headers['accept-encoding'] || '';\r\n      if (acceptEncoding.includes('gzip')) {\r\n        const compressed = await gzipAsync(content);\r\n        headers['Content-Encoding'] = 'gzip';\r\n        headers['Vary'] = 'Accept-Encoding';\r\n        res.writeHead(200, headers);\r\n        res.end(compressed);\r\n        return;\r\n      }\r\n    }\r\n\r\n    res.writeHead(200, headers);\r\n    res.end(content);\r\n  }\r\n\r\n  private isDotFile(urlPath: string): boolean {\r\n    return urlPath.split('/').some(part => part.startsWith('.'));\r\n  }\r\n\r\n  private handleDotFile(req: IncomingMessage, res: ServerResponse, next: () => Promise<void>): Promise<void> | false {\r\n    if (this.dotFiles === 'allow') {\r\n      return false; // Continue processing\r\n    }\r\n\r\n    if (this.dotFiles === 'deny') {\r\n      res.writeHead(403, { 'Content-Type': 'text/plain' });\r\n      res.end('Forbidden');\r\n      return Promise.resolve();\r\n    }\r\n\r\n    // ignore - pass to next middleware\r\n    return next();\r\n  }\r\n\r\n  private isCompressible(mimeType: string): boolean {\r\n    return /^(text|application)\\/(javascript|json|html|xml|css|plain)/.test(mimeType);\r\n  }\r\n\r\n  private getMimeType(ext: string): string {\r\n    const mimeTypes: Record<string, string> = {\r\n      '.html': 'text/html',\r\n      '.js': 'application/javascript',\r\n      '.css': 'text/css',\r\n      '.json': 'application/json',\r\n      '.png': 'image/png',\r\n      '.jpg': 'image/jpeg',\r\n      '.gif': 'image/gif',\r\n      '.svg': 'image/svg+xml',\r\n      '.wav': 'audio/wav',\r\n      '.mp4': 'video/mp4',\r\n      '.woff': 'application/font-woff',\r\n      '.ttf': 'application/font-ttf',\r\n      '.eot': 'application/vnd.ms-fontobject',\r\n      '.otf': 'application/font-otf',\r\n      '.wasm': 'application/wasm',\r\n    };\r\n    return mimeTypes[ext] || 'application/octet-stream';\r\n  }\r\n\r\n  middleware(): Middleware {\r\n    return async (req: IncomingMessage, res: ServerResponse, next: () => Promise<void>): Promise<void> => {\r\n      try {\r\n        if (req.method !== 'GET' && req.method !== 'HEAD') {\r\n          return next();\r\n        }\r\n\r\n        const urlPath = path.normalize(decodeURIComponent(req.url || '').split('?')[0]);\r\n        \r\n        if (this.isDotFile(urlPath)) {\r\n          const dotFileResult = this.handleDotFile(req, res, next);\r\n          if (dotFileResult) return dotFileResult;\r\n        }\r\n\r\n        const fullPath = path.join(this.root, urlPath);\r\n\r\n        try {\r\n          const stats = await stat(fullPath);\r\n\r\n          if (stats.isDirectory()) {\r\n            for (const indexFile of this.index) {\r\n              const indexPath = path.join(fullPath, indexFile);\r\n              try {\r\n                const indexStats = await stat(indexPath);\r\n                if (indexStats.isFile()) {\r\n                  await this.serveFile(indexPath, indexStats, req, res);\r\n                  return;\r\n                }\r\n              } catch {\r\n                continue;\r\n              }\r\n            }\r\n            return next();\r\n          }\r\n\r\n          if (stats.isFile()) {\r\n            await this.serveFile(fullPath, stats, req, res);\r\n            return;\r\n          }\r\n        } catch {\r\n          return next();\r\n        }\r\n      } catch (error) {\r\n        return next();\r\n      }\r\n    };\r\n  }\r\n}"],"names":[],"mappings":"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"}