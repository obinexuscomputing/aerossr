{"version":3,"file":"cache.js","sources":["../../../../src/utils/cache.ts"],"sourcesContent":["export interface CacheItem<T> {\r\n  value: T;\r\n  expires?: number | undefined;\r\n}\r\nexport interface CacheOptions {\r\n  ttl?: number;\r\n  maxSize?: number;\r\n}\r\nexport interface CacheStore<T> {\r\n  get(key: string): T | undefined;\r\n  set(key: string, value: T, itemTtl?: number, ttl?: number): void;\r\n  clear(): void;\r\n}\r\n\r\nexport function createCache<T>(): CacheStore<T> {\r\n  const cache = new Map<string, CacheItem<T>>();\r\n\r\n  return {\r\n    get: (key: string): T | undefined => {\r\n      const item = cache.get(key);\r\n      if (!item) return undefined;\r\n      \r\n      if (item.expires && item.expires < Date.now()) {\r\n        cache.delete(key);\r\n        return undefined;\r\n      }\r\n      \r\n      return item.value;\r\n    },\r\n    set: (key: string, value: T, itemTtl?: number, ttl?: number): void => {\r\n      const expires = itemTtl || ttl\r\n        ? Date.now() + (itemTtl || ttl!)\r\n        : undefined;\r\n        \r\n      cache.set(key, { value, expires });\r\n    },\r\n    clear: (): void => cache.clear()\r\n  };\r\n}"],"names":[],"mappings":";;SAcgB,WAAW,GAAA;AACzB,IAAA,MAAM,KAAK,GAAG,IAAI,GAAG,EAAwB,CAAC;IAE9C,OAAO;AACL,QAAA,GAAG,EAAE,CAAC,GAAW,KAAmB;YAClC,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5B,YAAA,IAAI,CAAC,IAAI;AAAE,gBAAA,OAAO,SAAS,CAAC;AAE5B,YAAA,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE;AAC7C,gBAAA,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAClB,gBAAA,OAAO,SAAS,CAAC;AAClB,aAAA;YAED,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;QACD,GAAG,EAAE,CAAC,GAAW,EAAE,KAAQ,EAAE,OAAgB,EAAE,GAAY,KAAU;AACnE,YAAA,MAAM,OAAO,GAAG,OAAO,IAAI,GAAG;kBAC1B,IAAI,CAAC,GAAG,EAAE,IAAI,OAAO,IAAI,GAAI,CAAC;kBAC9B,SAAS,CAAC;YAEd,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;SACpC;AACD,QAAA,KAAK,EAAE,MAAY,KAAK,CAAC,KAAK,EAAE;KACjC,CAAC;AACJ;;;;"}