{"version":3,"file":"bundler.cjs","sources":["../../../../src/utils/bundler.ts"],"sourcesContent":["import * as fs from 'fs/promises';\r\nimport * as path from 'path';\r\n\r\ninterface DependencyOptions {\r\n  extensions?: string[];\r\n  maxDepth?: number;\r\n  ignorePatterns?: string[];\r\n}\r\n\r\ntype FileContent = string | Buffer;\r\n\r\n/**\r\n * Resolves all dependencies for a given file\r\n */\r\nexport async function resolveDependencies(\r\n  filePath: string,\r\n  deps: Set<string> = new Set(),\r\n  options: DependencyOptions = {},\r\n  depth = 0\r\n): Promise<Set<string>> {\r\n  const {\r\n    extensions = ['.js', '.ts'],\r\n    maxDepth = 100,\r\n    ignorePatterns = []\r\n  } = options;\r\n\r\n  // Prevent infinite recursion and check ignore patterns\r\n  if (depth > maxDepth || \r\n      deps.has(filePath) || \r\n      ignorePatterns.some(pattern => filePath.includes(pattern))) {\r\n    return deps;\r\n  }\r\n\r\n  try {\r\n    deps.add(filePath);\r\n    const content = await fs.readFile(filePath, 'utf-8');\r\n\r\n    // Match both require() and import statements\r\n    const importMatches = content.match(\r\n      /(?:require\\s*\\(['\"]([^'\"]+)['\"]\\)|import\\s+.*?from\\s+['\"]([^'\"]+)['\"])/g\r\n    ) || [];\r\n\r\n    for (const match of importMatches) {\r\n      const depPath = match.match(/['\"]([^'\"]+)['\"]/)?.[1];\r\n      if (!depPath) continue;\r\n\r\n      try {\r\n        const fullPath = await resolveFilePath(depPath, filePath, extensions);\r\n        if (fullPath) {\r\n          await resolveDependencies(fullPath, deps, options, depth + 1);\r\n        }\r\n      } catch (err) {\r\n        if (process.env.NODE_ENV !== 'test') {\r\n          console.warn(`Warning: Could not resolve dependency ${depPath} in ${filePath}`);\r\n        }\r\n      }\r\n    }\r\n  } catch (err) {\r\n    throw new Error(`Error processing ${filePath}: ${err instanceof Error ? err.message : String(err)}`);\r\n  }\r\n\r\n  return deps;\r\n}\r\n\r\nasync function resolveFilePath(\r\n  importPath: string,\r\n  fromPath: string,\r\n  extensions: string[]\r\n): Promise<string | null> {\r\n  const basePath = path.resolve(path.dirname(fromPath), importPath);\r\n\r\n  // Check if path already has a valid extension\r\n  if (extensions.some(ext => importPath.endsWith(ext))) {\r\n    try {\r\n      await fs.access(basePath);\r\n      return basePath;\r\n    } catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Try adding extensions\r\n  for (const ext of extensions) {\r\n    const fullPath = basePath + ext;\r\n    try {\r\n      await fs.access(fullPath);\r\n      return fullPath;\r\n    } catch {\r\n      continue;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * Minifies JavaScript code while preserving string contents\r\n */\r\nexport function minifyBundle(code: string): string {\r\n  if (!code.trim()) return '';\r\n\r\n  let inString = false;\r\n  let stringChar = '';\r\n  let result = '';\r\n  let i = 0;\r\n\r\n  while (i < code.length) {\r\n    if (!inString) {\r\n      // Handle comments\r\n      if (code[i] === '/' && code[i + 1] === '*') {\r\n        i = code.indexOf('*/', i + 2) + 2;\r\n        if (i === 1) i = code.length;\r\n        continue;\r\n      }\r\n      if (code[i] === '/' && code[i + 1] === '/') {\r\n        i = code.indexOf('\\n', i) + 1;\r\n        if (i === 0) i = code.length;\r\n        continue;\r\n      }\r\n\r\n      // Handle strings\r\n      if (code[i] === '\"' || code[i] === \"'\") {\r\n        inString = true;\r\n        stringChar = code[i];\r\n        result += code[i];\r\n        i++;\r\n        continue;\r\n      }\r\n\r\n      // Handle whitespace\r\n      if (/\\s/.test(code[i])) {\r\n        result += ' ';\r\n        while (i < code.length && /\\s/.test(code[i])) i++;\r\n        continue;\r\n      }\r\n    } else {\r\n      // Handle string ending\r\n      if (code[i] === stringChar && code[i - 1] !== '\\\\') {\r\n        inString = false;\r\n        stringChar = '';\r\n      }\r\n    }\r\n\r\n    if (i < code.length) {\r\n      result += code[i];\r\n      i++;\r\n    }\r\n  }\r\n\r\n  return result.trim().replace(/\\s+/g, ' ');\r\n}\r\n\r\n/**\r\n * Generates a bundled JavaScript file from an entry point\r\n */\r\nexport async function generateBundle(projectPath: string, entryPoint: string): Promise<string> {\r\n  const entryFilePath = path.join(projectPath, entryPoint);\r\n  let bundle = '';\r\n\r\n  try {\r\n    const dependencies = await resolveDependencies(entryFilePath);\r\n    \r\n    for (const dep of dependencies) {\r\n      const content = await fs.readFile(dep, 'utf-8');\r\n      const relativePath = path.relative(projectPath, dep);\r\n      bundle += `\\n// File: ${relativePath}\\n${content}\\n`;\r\n    }\r\n\r\n    return minifyBundle(bundle);\r\n  } catch (err) {\r\n    throw new Error(\r\n      `Failed to generate bundle from ${entryPoint}: ${err instanceof Error ? err.message : String(err)}`\r\n    );\r\n  }\r\n}"],"names":["fs","process","path"],"mappings":"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"}