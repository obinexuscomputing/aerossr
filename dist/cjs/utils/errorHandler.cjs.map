{"version":3,"file":"errorHandler.cjs","sources":["../../../src/utils/errorHandler.ts"],"sourcesContent":["import { IncomingMessage, ServerResponse } from 'http';\r\n\r\nexport function generateErrorPage(statusCode: number, message: string): string {\r\n  return `\r\n    <!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n        <title>Error ${statusCode}</title>\r\n        <style>\r\n            body { font-family: system-ui; padding: 2rem; max-width: 600px; margin: 0 auto; }\r\n            .error { background: #f8d7da; border: 1px solid #f5c6cb; padding: 1rem; border-radius: 4px; }\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <h1>Error ${statusCode}</h1>\r\n        <div class=\"error\">\r\n            <p>${message}</p>\r\n        </div>\r\n    </body>\r\n    </html>\r\n  `;\r\n}\r\n\r\nexport async function handleError(\r\n  error: Error & { statusCode?: number },\r\n  req: IncomingMessage,\r\n  res: ServerResponse\r\n): Promise<void> {\r\n  console.error('Server error:', error);\r\n\r\n  const statusCode = error.statusCode || 500;\r\n  const errorPage = generateErrorPage(statusCode, error.message);\r\n\r\n  res.writeHead(statusCode, {\r\n    'Content-Type': 'text/html',\r\n    'Cache-Control': 'no-store',\r\n  });\r\n  res.end(errorPage);\r\n}"],"names":[],"mappings":";;AAEgB,SAAA,iBAAiB,CAAC,UAAkB,EAAE,OAAe,EAAA;IACnE,OAAO,CAAA;;;;uBAIc,UAAU,CAAA;;;;;;;oBAOb,UAAU,CAAA;;iBAEb,OAAO,CAAA;;;;GAIrB,CAAC;AACJ,CAAC;AAEM,eAAe,WAAW,CAC/B,KAAsC,EACtC,GAAoB,EACpB,GAAmB,EAAA;AAEnB,IAAA,OAAO,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;AAEtC,IAAA,MAAM,UAAU,GAAG,KAAK,CAAC,UAAU,IAAI,GAAG,CAAC;IAC3C,MAAM,SAAS,GAAG,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;AAE/D,IAAA,GAAG,CAAC,SAAS,CAAC,UAAU,EAAE;AACxB,QAAA,cAAc,EAAE,WAAW;AAC3B,QAAA,eAAe,EAAE,UAAU;AAC5B,KAAA,CAAC,CAAC;AACH,IAAA,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACrB;;;;;"}