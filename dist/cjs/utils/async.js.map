{"version":3,"file":"async.js","sources":["../../../../src/utils/async.ts"],"sourcesContent":["import type { AnyFunction } from '../types';\r\n\r\n/**\r\n * Type guard to check if a value is a Promise\r\n */\r\nexport function isPromise<T = unknown>(value: unknown): value is Promise<T> {\r\n  return Boolean(\r\n    value && typeof value === 'object' && 'then' in value && typeof value.then === 'function'\r\n  );\r\n}\r\n\r\n/**\r\n * Ensures a function returns a Promise\r\n */\r\nexport function ensureAsync<T extends AnyFunction>(\r\n  fn: T\r\n): (...args: Parameters<T>) => Promise<ReturnType<T>> {\r\n  return async function(...args: Parameters<T>): Promise<ReturnType<T>> {\r\n    const result = await fn(...args);\r\n    return result as ReturnType<T>;\r\n  };\r\n}"],"names":[],"mappings":";;AAEA;;AAEG;AACG,SAAU,SAAS,CAAc,KAAc,EAAA;IACnD,OAAO,OAAO,CACZ,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,MAAM,IAAI,KAAK,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,UAAU,CAC1F,CAAC;AACJ,CAAC;AAED;;AAEG;AACG,SAAU,WAAW,CACzB,EAAK,EAAA;IAEL,OAAO,gBAAe,GAAG,IAAmB,EAAA;QAC1C,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;AACjC,QAAA,OAAO,MAAuB,CAAC;AACjC,KAAC,CAAC;AACJ;;;;;"}