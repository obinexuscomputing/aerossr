{"version":3,"file":"bundler.js","sources":["../../../../src/utils/bundler.ts"],"sourcesContent":["import * as fs from 'fs/promises';\r\nimport * as path from 'path';\r\n\r\nexport interface DependencyOptions {\r\n  extensions?: string[];\r\n  maxDepth?: number;\r\n  ignorePatterns?: string[];\r\n  baseDir?: string;\r\n}\r\n\r\nexport interface BundleOptions extends DependencyOptions {\r\n  minify?: boolean;\r\n  sourceMap?: boolean;\r\n  comments?: boolean;\r\n}\r\n\r\n/**\r\n * Resolves all dependencies for a given file\r\n */\r\nexport async function resolveDependencies(\r\n  filePath: string,\r\n  deps: Set<string> = new Set(),\r\n  options: DependencyOptions = {}\r\n): Promise<Set<string>> {\r\n  const {\r\n    extensions = ['.js', '.ts', '.jsx', '.tsx'],\r\n    maxDepth = 100,\r\n    ignorePatterns = ['node_modules']\r\n  } = options;\r\n\r\n  async function resolve(currentPath: string, depth = 0): Promise<void> {\r\n    if (depth > maxDepth || ignorePatterns.some(pattern => currentPath.includes(pattern))) {\r\n      return;\r\n    }\r\n\r\n    // Add the file to dependencies before processing to handle circular dependencies\r\n    deps.add(currentPath);\r\n\r\n    try {\r\n      const content = await fs.readFile(currentPath, 'utf-8');\r\n\r\n      // Match different import patterns\r\n      const importPatterns = [\r\n        /require\\s*\\(['\"]([^'\"]+)['\"]\\)/g,                    // require('...')\r\n        /import\\s+.*?from\\s+['\"]([^'\"]+)['\"]/g,              // import ... from '...'\r\n        /import\\s*['\"]([^'\"]+)['\"]/g,                        // import '...'\r\n        /import\\s*\\(.*?['\"]([^'\"]+)['\"]\\s*\\)/g,              // import('...')\r\n        /export\\s+.*?from\\s+['\"]([^'\"]+)['\"]/g               // export ... from '...'\r\n      ];\r\n\r\n      for (const pattern of importPatterns) {\r\n        let match;\r\n        while ((match = pattern.exec(content)) !== null) {\r\n          const importPath = match[1];\r\n          if (!importPath) continue;\r\n\r\n          try {\r\n            const fullPath = await resolveFilePath(importPath, currentPath, extensions);\r\n            if (fullPath && !deps.has(fullPath)) {\r\n              await resolve(fullPath, depth + 1);\r\n            }\r\n          } catch (err) {\r\n            if (process.env.NODE_ENV !== 'test') {\r\n              console.warn(`Warning: Could not resolve dependency ${importPath} in ${currentPath}`);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      throw new Error(`Error processing ${currentPath}: ${err instanceof Error ? err.message : String(err)}`);\r\n    }\r\n  }\r\n\r\n  await resolve(filePath);\r\n  return deps;\r\n}\r\n\r\n/**\r\n * Resolves the full path of an import\r\n */\r\nasync function resolveFilePath(\r\n  importPath: string,\r\n  fromPath: string,\r\n  extensions: string[],\r\n): Promise<string | null> {\r\n  // Handle package imports\r\n  if (!importPath.startsWith('.') && !importPath.startsWith('/')) {\r\n    return null;\r\n  }\r\n\r\n  const basePath = path.resolve(path.dirname(fromPath), importPath);\r\n\r\n  // Check if path has extension\r\n  if (extensions.some(ext => importPath.endsWith(ext))) {\r\n    try {\r\n      await fs.access(basePath);\r\n      return basePath;\r\n    } catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Try adding extensions\r\n  for (const ext of extensions) {\r\n    const fullPath = basePath + ext;\r\n    try {\r\n      await fs.access(fullPath);\r\n      return fullPath;\r\n    } catch {\r\n      continue;\r\n    }\r\n  }\r\n\r\n  // Try index files\r\n  for (const ext of extensions) {\r\n    const indexPath = path.join(basePath, `index${ext}`);\r\n    try {\r\n      await fs.access(indexPath);\r\n      return indexPath;\r\n    } catch {\r\n      continue;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * Minifies JavaScript code while preserving important structures\r\n */\r\nexport function minifyBundle(code: string): string {\r\n  if (!code.trim()) return '';\r\n\r\n  // Replace all line comments\r\n  code = code.replace(/\\/\\/[^\\n]*/g, '');\r\n  \r\n  // Replace all multiline comments\r\n  code = code.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\r\n\r\n  // Handle string literals and operators\r\n  let result = '';\r\n  let inString = false;\r\n  let stringChar = '';\r\n  let lastChar: string | undefined = '';\r\n\r\n  for (let i = 0; i < code.length; i++) {\r\n    const char = code[i];\r\n\r\n    if (inString) {\r\n      result += char;\r\n      if (char === stringChar && lastChar !== '\\\\') {\r\n        inString = false;\r\n      }\r\n    } else if (char === '\"' || char === \"'\") {\r\n      inString = true;\r\n      stringChar = char;\r\n      result += char;\r\n    } else if (char && /\\s/.test(char)) {\r\n      const prevChar = result[result.length - 1];\r\n      const nextChar = code[i + 1];\r\n      \r\n      // Keep space only if needed for syntax\r\n      if (prevChar && nextChar && \r\n          /[a-zA-Z0-9_$]/.test(prevChar) && \r\n          /[a-zA-Z0-9_$]/.test(nextChar)) {\r\n        result += ' ';\r\n      }\r\n    } else {\r\n      result += char;\r\n    }\r\n    lastChar = char;\r\n  }\r\n\r\n  // Clean up operators and punctuation\r\n  return result\r\n    .replace(/\\s*([+\\-*/%=<>!&|^~?:,;{}[\\]()])\\s*/g, '$1')\r\n    .replace(/\\s+/g, ' ')\r\n    .trim();\r\n}\r\n\r\n/**\r\n * Generates a bundled JavaScript file from an entry point\r\n */\r\nexport async function generateBundle(\r\n  projectPath: string, \r\n  entryPoint: string,\r\n  options: BundleOptions = {}\r\n): Promise<string> {\r\n  const {\r\n    minify = true,\r\n    comments = true,\r\n    ...dependencyOptions\r\n  } = options;\r\n\r\n  try {\r\n    const entryFilePath = path.resolve(projectPath, entryPoint);\r\n    const dependencies = await resolveDependencies(entryFilePath, new Set(), {\r\n      ...dependencyOptions,\r\n      baseDir: projectPath\r\n    });\r\n\r\n    if (dependencies.size === 0) {\r\n      throw new Error(`No dependencies found for ${entryPoint}`);\r\n    }\r\n\r\n    let bundle = '';\r\n    \r\n    for (const dep of dependencies) {\r\n      const content = await fs.readFile(dep, 'utf-8');\r\n      const relativePath = path.relative(projectPath, dep);\r\n      \r\n      if (comments) {\r\n        bundle += `\\n// File: ${relativePath}\\n`;\r\n      }\r\n      \r\n      bundle += `${content}\\n`;\r\n    }\r\n\r\n    return minify ? minifyBundle(bundle) : bundle;\r\n  } catch (err) {\r\n    throw new Error(\r\n      `Failed to generate bundle from ${entryPoint}: ${err instanceof Error ? err.message : String(err)}`\r\n    );\r\n  }\r\n}"],"names":["fs","path"],"mappings":"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"}