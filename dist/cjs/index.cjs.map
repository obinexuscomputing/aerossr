{"version":3,"file":"index.cjs","sources":["../../src/index.ts"],"sourcesContent":["import { AeroSSR as AeroSSRBase } from './AeroSSR';\r\nimport { StaticFileMiddleware } from './middleware/StaticFileMiddleware';\r\nimport { Logger } from './utils/logger';\r\nimport { createCache } from './utils/cache';\r\nimport { setCorsHeaders } from './utils/cors';\r\nimport { generateETag } from './utils/etag';\r\nimport { generateErrorPage, handleError } from './utils/errorHandler';\r\nimport { injectMetaTags } from './utils/html';\r\nimport { generateBundle } from './utils/bundler';\r\n\r\nexport type {\r\n    AeroSSRConfig,\r\n    CacheStore,\r\n    StaticFileOptions,\r\n    RouteHandler,\r\n    Middleware,\r\n    LoggerOptions,\r\n    ErrorResponse,\r\n    MetaTags\r\n} from './types/index';\r\n\r\n// Create the base namespace with its implementations\r\nexport const AeroSSR = {\r\n    Core: AeroSSRBase,\r\n    Middleware: {\r\n        StaticFile: StaticFileMiddleware\r\n    },\r\n    Utils: {\r\n        Logger,\r\n        Cache: {\r\n            create: createCache\r\n        },\r\n        HTTP: {\r\n            setCorsHeaders,\r\n            generateETag\r\n        },\r\n        Error: {\r\n            generatePage: generateErrorPage,\r\n            handle: handleError\r\n        },\r\n        HTML: {\r\n            injectMetaTags\r\n        },\r\n        Bundle: {\r\n            generate: generateBundle\r\n        }\r\n    }\r\n} as const;\r\n\r\n// Export utilities for direct access\r\nexport {\r\n    StaticFileMiddleware,\r\n    Logger,\r\n    createCache,\r\n    setCorsHeaders,\r\n    generateETag,\r\n    generateErrorPage,\r\n    handleError,\r\n    injectMetaTags,\r\n    generateBundle\r\n};\r\n\r\n// Single default export of the base class\r\nexport default AeroSSRBase;\r\n\r\n// Re-export everything from sub-modules\r\nexport * from './middleware/index';\r\nexport * from './utils/index';"],"names":["AeroSSRBase","StaticFileMiddleware","Logger","createCache","setCorsHeaders","generateETag","generateErrorPage","handleError","injectMetaTags","generateBundle"],"mappings":";;;;;;;;;;;;;;AAqBA;AACa,MAAA,OAAO,GAAG;AACnB,IAAA,IAAI,EAAEA,iBAAW;AACjB,IAAA,UAAU,EAAE;AACR,QAAA,UAAU,EAAEC,yCAAoB;AACnC,KAAA;AACD,IAAA,KAAK,EAAE;gBACHC,aAAM;AACN,QAAA,KAAK,EAAE;AACH,YAAA,MAAM,EAAEC,iBAAW;AACtB,SAAA;AACD,QAAA,IAAI,EAAE;4BACFC,mBAAc;0BACdC,iBAAY;AACf,SAAA;AACD,QAAA,KAAK,EAAE;AACH,YAAA,YAAY,EAAEC,8BAAiB;AAC/B,YAAA,MAAM,EAAEC,wBAAW;AACtB,SAAA;AACD,QAAA,IAAI,EAAE;4BACFC,mBAAc;AACjB,SAAA;AACD,QAAA,MAAM,EAAE;AACJ,YAAA,QAAQ,EAAEC,sBAAc;AAC3B,SAAA;AACJ,KAAA;;;;;;;;;;;;;;;;;"}