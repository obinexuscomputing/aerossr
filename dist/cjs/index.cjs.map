{"version":3,"file":"index.cjs","sources":["../../src/index.ts"],"sourcesContent":["import { IncomingMessage, Server, ServerResponse } from 'http';\r\nimport { AeroSSRConfig, StaticFileOptions, LoggerOptions, CacheStore, MetaTags } from './types';\r\n\r\n// Export the types\r\nexport { AeroSSRConfig, StaticFileOptions, LoggerOptions, CacheStore, MetaTags };\r\n\r\n// Export the core class (main export)\r\nexport class AeroSSR {\r\n    constructor(config?: AeroSSRConfig);\r\n    start(): Promise<Server>;\r\n    stop(): Promise<void>;\r\n    use(middleware: Middleware): void;\r\n    route(path: string, handler: RouteHandler): void;\r\n    readonly config: Required<AeroSSRConfig>;\r\n}\r\n\r\n// Export middleware classes\r\nexport class StaticFileMiddleware {\r\n    constructor(options: StaticFileOptions);\r\n    middleware(): Middleware;\r\n}\r\n\r\n// Export type definitions\r\nexport type RouteHandler = (\r\n    req: IncomingMessage,\r\n    res: ServerResponse\r\n) => Promise<void> | void;\r\n\r\nexport type Middleware = (\r\n    req: IncomingMessage,\r\n    res: ServerResponse,\r\n    next: () => Promise<void>\r\n) => Promise<void>;\r\n\r\n// Export utility functions\r\nexport namespace Utils {\r\n    export namespace Cache {\r\n        export function create<T>(): CacheStore<T>;\r\n    }\r\n    \r\n    export namespace HTTP {\r\n        export function setCorsHeaders(res: ServerResponse, origins?: string): void;\r\n        export function generateETag(content: string | Buffer): string;\r\n    }\r\n    \r\n    export namespace Error {\r\n        export function generatePage(statusCode: number, message: string): string;\r\n        export function handle(error: Error & { statusCode?: number }, req: IncomingMessage, res: ServerResponse): Promise<void>;\r\n    }\r\n    \r\n    export namespace HTML {\r\n        export function injectMetaTags(html: string, meta?: MetaTags, defaultMeta?: MetaTags): string;\r\n    }\r\n    \r\n    export namespace Bundle {\r\n        export function generate(projectPath: string, entryPoint: string): Promise<string>;\r\n    }\r\n}\r\n\r\n// Make AeroSSR the default export\r\nexport default AeroSSR;"],"names":["Utils"],"mappings":";;;;AAMA;MACa,OAAO,CAAA;AAMP,IAAA,MAAM,CAA0B;AAC5C,CAAA;AAED;MACa,oBAAoB,CAAA;AAGhC,CAAA;AAcD;AACiBA,uBAsBhB;AAtBD,CAAA,UAAiB,KAAK,EAAA;AAClB,IAAA,CAAA,UAAiB,KAAK,EAAA;AAEtB,KAAC,EAFgB,KAAK,CAAA,KAAA,KAAL,WAAK,GAErB,EAAA,CAAA,CAAA,CAAA;AAED,IAAA,CAAA,UAAiB,IAAI,EAAA;AAGrB,KAAC,EAHgB,KAAI,CAAA,IAAA,KAAJ,UAAI,GAGpB,EAAA,CAAA,CAAA,CAAA;AAED,IAAA,CAAA,UAAiB,KAAK,EAAA;AAGtB,KAAC,EAHgB,KAAK,CAAA,KAAA,KAAL,WAAK,GAGrB,EAAA,CAAA,CAAA,CAAA;AAED,IAAA,CAAA,UAAiB,IAAI,EAAA;AAErB,KAAC,EAFgB,KAAI,CAAA,IAAA,KAAJ,UAAI,GAEpB,EAAA,CAAA,CAAA,CAAA;AAED,IAAA,CAAA,UAAiB,MAAM,EAAA;AAEvB,KAAC,EAFgB,KAAM,CAAA,MAAA,KAAN,YAAM,GAEtB,EAAA,CAAA,CAAA,CAAA;AACL,CAAC,EAtBgBA,aAAK,KAALA,aAAK,GAsBrB,EAAA,CAAA,CAAA;;;;;;"}